//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language\\toyPlLexer.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class toyPlLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		ASSIGN=1, EQ=2, NOT_EQ=3, GT=4, LW=5, GTEQ=6, LWEQ=7, SEMI=8, LPAREN=9, 
		RPAREN=10, SUM_OP=11, MINUS_OP=12, TIMES_OP=13, DIV_OP=14, MOD_OP=15, 
		AND_OP=16, OR_OP=17, NOT=18, LCOND=19, RCOND=20, IF=21, THEN=22, ELSE=23, 
		WHILE=24, DO=25, INT=26, ID=27, WS=28;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"ASSIGN", "EQ", "NOT_EQ", "GT", "LW", "GTEQ", "LWEQ", "SEMI", "LPAREN", 
		"RPAREN", "SUM_OP", "MINUS_OP", "TIMES_OP", "DIV_OP", "MOD_OP", "AND_OP", 
		"OR_OP", "NOT", "LCOND", "RCOND", "IF", "THEN", "ELSE", "WHILE", "DO", 
		"INT", "ID", "WS"
	};


	public toyPlLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public toyPlLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "':='", "'='", "'/='", "'>'", "'<'", "'>='", "'<='", "';'", "'('", 
		"')'", "'+'", "'-'", "'*'", "'/'", "'%'", "'&&'", "'||'", "'!'", "'{'", 
		"'}'", "'if'", "'then'", "'else'", "'while'", "'do'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "ASSIGN", "EQ", "NOT_EQ", "GT", "LW", "GTEQ", "LWEQ", "SEMI", "LPAREN", 
		"RPAREN", "SUM_OP", "MINUS_OP", "TIMES_OP", "DIV_OP", "MOD_OP", "AND_OP", 
		"OR_OP", "NOT", "LCOND", "RCOND", "IF", "THEN", "ELSE", "WHILE", "DO", 
		"INT", "ID", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "toyPlLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static toyPlLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1E', '\x92', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', 
		'\n', '\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x16', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', '\x3', 
		'\x17', '\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', 
		'\x18', '\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', '\x3', 
		'\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', 
		'\x1A', '\x3', '\x1A', '\x3', '\x1B', '\x6', '\x1B', '\x81', '\n', '\x1B', 
		'\r', '\x1B', '\xE', '\x1B', '\x82', '\x3', '\x1C', '\x3', '\x1C', '\a', 
		'\x1C', '\x87', '\n', '\x1C', '\f', '\x1C', '\xE', '\x1C', '\x8A', '\v', 
		'\x1C', '\x3', '\x1D', '\x6', '\x1D', '\x8D', '\n', '\x1D', '\r', '\x1D', 
		'\xE', '\x1D', '\x8E', '\x3', '\x1D', '\x3', '\x1D', '\x2', '\x2', '\x1E', 
		'\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', 
		'\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', 
		'\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', 
		'#', '\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', 
		'\x18', '/', '\x19', '\x31', '\x1A', '\x33', '\x1B', '\x35', '\x1C', '\x37', 
		'\x1D', '\x39', '\x1E', '\x3', '\x2', '\x6', '\x3', '\x2', '\x32', ';', 
		'\x5', '\x2', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x6', '\x2', 
		'\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x5', '\x2', 
		'\v', '\f', '\xE', '\xF', '\"', '\"', '\x2', '\x94', '\x2', '\x3', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x35', '\x3', '\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x39', '\x3', '\x2', '\x2', '\x2', '\x3', ';', '\x3', 
		'\x2', '\x2', '\x2', '\x5', '>', '\x3', '\x2', '\x2', '\x2', '\a', '@', 
		'\x3', '\x2', '\x2', '\x2', '\t', '\x43', '\x3', '\x2', '\x2', '\x2', 
		'\v', '\x45', '\x3', '\x2', '\x2', '\x2', '\r', 'G', '\x3', '\x2', '\x2', 
		'\x2', '\xF', 'J', '\x3', '\x2', '\x2', '\x2', '\x11', 'M', '\x3', '\x2', 
		'\x2', '\x2', '\x13', 'O', '\x3', '\x2', '\x2', '\x2', '\x15', 'Q', '\x3', 
		'\x2', '\x2', '\x2', '\x17', 'S', '\x3', '\x2', '\x2', '\x2', '\x19', 
		'U', '\x3', '\x2', '\x2', '\x2', '\x1B', 'W', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', 'Y', '\x3', '\x2', '\x2', '\x2', '\x1F', '[', '\x3', '\x2', '\x2', 
		'\x2', '!', ']', '\x3', '\x2', '\x2', '\x2', '#', '`', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x63', '\x3', '\x2', '\x2', '\x2', '\'', '\x65', '\x3', '\x2', 
		'\x2', '\x2', ')', 'g', '\x3', '\x2', '\x2', '\x2', '+', 'i', '\x3', '\x2', 
		'\x2', '\x2', '-', 'l', '\x3', '\x2', '\x2', '\x2', '/', 'q', '\x3', '\x2', 
		'\x2', '\x2', '\x31', 'v', '\x3', '\x2', '\x2', '\x2', '\x33', '|', '\x3', 
		'\x2', '\x2', '\x2', '\x35', '\x80', '\x3', '\x2', '\x2', '\x2', '\x37', 
		'\x84', '\x3', '\x2', '\x2', '\x2', '\x39', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', ';', '<', '\a', '<', '\x2', '\x2', '<', '=', '\a', '?', '\x2', 
		'\x2', '=', '\x4', '\x3', '\x2', '\x2', '\x2', '>', '?', '\a', '?', '\x2', 
		'\x2', '?', '\x6', '\x3', '\x2', '\x2', '\x2', '@', '\x41', '\a', '\x31', 
		'\x2', '\x2', '\x41', '\x42', '\a', '?', '\x2', '\x2', '\x42', '\b', '\x3', 
		'\x2', '\x2', '\x2', '\x43', '\x44', '\a', '@', '\x2', '\x2', '\x44', 
		'\n', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\a', '>', '\x2', '\x2', 
		'\x46', '\f', '\x3', '\x2', '\x2', '\x2', 'G', 'H', '\a', '@', '\x2', 
		'\x2', 'H', 'I', '\a', '?', '\x2', '\x2', 'I', '\xE', '\x3', '\x2', '\x2', 
		'\x2', 'J', 'K', '\a', '>', '\x2', '\x2', 'K', 'L', '\a', '?', '\x2', 
		'\x2', 'L', '\x10', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\a', '=', '\x2', 
		'\x2', 'N', '\x12', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\a', '*', '\x2', 
		'\x2', 'P', '\x14', '\x3', '\x2', '\x2', '\x2', 'Q', 'R', '\a', '+', '\x2', 
		'\x2', 'R', '\x16', '\x3', '\x2', '\x2', '\x2', 'S', 'T', '\a', '-', '\x2', 
		'\x2', 'T', '\x18', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\a', '/', '\x2', 
		'\x2', 'V', '\x1A', '\x3', '\x2', '\x2', '\x2', 'W', 'X', '\a', ',', '\x2', 
		'\x2', 'X', '\x1C', '\x3', '\x2', '\x2', '\x2', 'Y', 'Z', '\a', '\x31', 
		'\x2', '\x2', 'Z', '\x1E', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\a', 
		'\'', '\x2', '\x2', '\\', ' ', '\x3', '\x2', '\x2', '\x2', ']', '^', '\a', 
		'(', '\x2', '\x2', '^', '_', '\a', '(', '\x2', '\x2', '_', '\"', '\x3', 
		'\x2', '\x2', '\x2', '`', '\x61', '\a', '~', '\x2', '\x2', '\x61', '\x62', 
		'\a', '~', '\x2', '\x2', '\x62', '$', '\x3', '\x2', '\x2', '\x2', '\x63', 
		'\x64', '\a', '#', '\x2', '\x2', '\x64', '&', '\x3', '\x2', '\x2', '\x2', 
		'\x65', '\x66', '\a', '}', '\x2', '\x2', '\x66', '(', '\x3', '\x2', '\x2', 
		'\x2', 'g', 'h', '\a', '\x7F', '\x2', '\x2', 'h', '*', '\x3', '\x2', '\x2', 
		'\x2', 'i', 'j', '\a', 'k', '\x2', '\x2', 'j', 'k', '\a', 'h', '\x2', 
		'\x2', 'k', ',', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\a', 'v', '\x2', 
		'\x2', 'm', 'n', '\a', 'j', '\x2', '\x2', 'n', 'o', '\a', 'g', '\x2', 
		'\x2', 'o', 'p', '\a', 'p', '\x2', '\x2', 'p', '.', '\x3', '\x2', '\x2', 
		'\x2', 'q', 'r', '\a', 'g', '\x2', '\x2', 'r', 's', '\a', 'n', '\x2', 
		'\x2', 's', 't', '\a', 'u', '\x2', '\x2', 't', 'u', '\a', 'g', '\x2', 
		'\x2', 'u', '\x30', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', 'y', '\x2', 
		'\x2', 'w', 'x', '\a', 'j', '\x2', '\x2', 'x', 'y', '\a', 'k', '\x2', 
		'\x2', 'y', 'z', '\a', 'n', '\x2', '\x2', 'z', '{', '\a', 'g', '\x2', 
		'\x2', '{', '\x32', '\x3', '\x2', '\x2', '\x2', '|', '}', '\a', '\x66', 
		'\x2', '\x2', '}', '~', '\a', 'q', '\x2', '\x2', '~', '\x34', '\x3', '\x2', 
		'\x2', '\x2', '\x7F', '\x81', '\t', '\x2', '\x2', '\x2', '\x80', '\x7F', 
		'\x3', '\x2', '\x2', '\x2', '\x81', '\x82', '\x3', '\x2', '\x2', '\x2', 
		'\x82', '\x80', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\x3', '\x2', 
		'\x2', '\x2', '\x83', '\x36', '\x3', '\x2', '\x2', '\x2', '\x84', '\x88', 
		'\t', '\x3', '\x2', '\x2', '\x85', '\x87', '\t', '\x4', '\x2', '\x2', 
		'\x86', '\x85', '\x3', '\x2', '\x2', '\x2', '\x87', '\x8A', '\x3', '\x2', 
		'\x2', '\x2', '\x88', '\x86', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', 
		'\x3', '\x2', '\x2', '\x2', '\x89', '\x38', '\x3', '\x2', '\x2', '\x2', 
		'\x8A', '\x88', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x8D', '\t', '\x5', 
		'\x2', '\x2', '\x8C', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', 
		'\x3', '\x2', '\x2', '\x2', '\x8E', '\x8C', '\x3', '\x2', '\x2', '\x2', 
		'\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x90', '\x3', '\x2', 
		'\x2', '\x2', '\x90', '\x91', '\b', '\x1D', '\x2', '\x2', '\x91', ':', 
		'\x3', '\x2', '\x2', '\x2', '\x6', '\x2', '\x82', '\x88', '\x8E', '\x3', 
		'\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
